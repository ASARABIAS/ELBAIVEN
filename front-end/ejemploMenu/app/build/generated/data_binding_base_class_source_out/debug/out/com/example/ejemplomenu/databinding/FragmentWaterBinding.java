// Generated by view binder compiler. Do not edit!
package com.example.ejemplomenu.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ejemplomenu.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentWaterBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonFragmentHome;

  @NonNull
  public final View divider0;

  @NonNull
  public final View divider1;

  @NonNull
  public final ImageView imageWaterBrandA;

  @NonNull
  public final ImageView imageWaterBrandB;

  @NonNull
  public final TextView textWaterBrandA;

  @NonNull
  public final TextView textWaterBrandB;

  private FragmentWaterBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button buttonFragmentHome, @NonNull View divider0, @NonNull View divider1,
      @NonNull ImageView imageWaterBrandA, @NonNull ImageView imageWaterBrandB,
      @NonNull TextView textWaterBrandA, @NonNull TextView textWaterBrandB) {
    this.rootView = rootView;
    this.buttonFragmentHome = buttonFragmentHome;
    this.divider0 = divider0;
    this.divider1 = divider1;
    this.imageWaterBrandA = imageWaterBrandA;
    this.imageWaterBrandB = imageWaterBrandB;
    this.textWaterBrandA = textWaterBrandA;
    this.textWaterBrandB = textWaterBrandB;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentWaterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentWaterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_water, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentWaterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_fragment_home;
      Button buttonFragmentHome = ViewBindings.findChildViewById(rootView, id);
      if (buttonFragmentHome == null) {
        break missingId;
      }

      id = R.id.divider_0;
      View divider0 = ViewBindings.findChildViewById(rootView, id);
      if (divider0 == null) {
        break missingId;
      }

      id = R.id.divider_1;
      View divider1 = ViewBindings.findChildViewById(rootView, id);
      if (divider1 == null) {
        break missingId;
      }

      id = R.id.image_water_brand_a;
      ImageView imageWaterBrandA = ViewBindings.findChildViewById(rootView, id);
      if (imageWaterBrandA == null) {
        break missingId;
      }

      id = R.id.image_water_brand_b;
      ImageView imageWaterBrandB = ViewBindings.findChildViewById(rootView, id);
      if (imageWaterBrandB == null) {
        break missingId;
      }

      id = R.id.text_water_brand_a;
      TextView textWaterBrandA = ViewBindings.findChildViewById(rootView, id);
      if (textWaterBrandA == null) {
        break missingId;
      }

      id = R.id.text_water_brand_b;
      TextView textWaterBrandB = ViewBindings.findChildViewById(rootView, id);
      if (textWaterBrandB == null) {
        break missingId;
      }

      return new FragmentWaterBinding((ConstraintLayout) rootView, buttonFragmentHome, divider0,
          divider1, imageWaterBrandA, imageWaterBrandB, textWaterBrandA, textWaterBrandB);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
